[{"/Users/riva/repos/todo/src/reportWebVitals.js":"1","/Users/riva/repos/todo/src/App.js":"2","/Users/riva/repos/todo/src/index.js":"3","/Users/riva/repos/todo/src/Components/TodoList.js":"4","/Users/riva/repos/todo/src/Components/TodoForm.js":"5","/Users/riva/repos/todo/src/Components/ToDoConnected.js":"6","/Users/riva/repos/todo/src/Components/Todo.js":"7","/Users/riva/repos/todo/src/useFormHook.js":"8","/Users/riva/repos/todo/src/AxiosHook.js":"9","/Users/riva/repos/todo/src/Components/TodoConnected.js":"10"},{"size":362,"mtime":1606171492211,"results":"11","hashOfConfig":"12"},{"size":683,"mtime":1606270844440,"results":"13","hashOfConfig":"12"},{"size":335,"mtime":1606197327577,"results":"14","hashOfConfig":"12"},{"size":601,"mtime":1606271943734,"results":"15","hashOfConfig":"12"},{"size":1293,"mtime":1606269864324,"results":"16","hashOfConfig":"12"},{"size":1958,"mtime":1606182754195,"results":"17","hashOfConfig":"12"},{"size":1927,"mtime":1606264104325,"results":"18","hashOfConfig":"12"},{"size":605,"mtime":1606270003322,"results":"19","hashOfConfig":"12"},{"size":2206,"mtime":1606271076409,"results":"20","hashOfConfig":"12"},{"size":837,"mtime":1606271848807,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"czx635",{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/riva/repos/todo/src/reportWebVitals.js",[],"/Users/riva/repos/todo/src/App.js",["46","47"],"import './App.css';\nimport React, { useState } from 'react';\nimport TodoConnected from './Components/TodoConnected';\nimport Spinner from 'react-bootstrap/Spinner';\n\nconst App = () => {\n  const [ input, countInput ] = useState(0);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n          <div className=\"homeTitle\">Home </div>\n        </div>\n        <div className=\"spinner\">\n          <Spinner animation=\"border\"  variant=\"primary\" role=\"status\">\n          <span className=\"sr-only\">Loading Request</span>\n          </Spinner>\n        </div>\n       <div className=\"formAndTodo\">\n         <TodoConnected/>\n       </div>\n    </div>\n  );\n}\nexport default App;\n",["48","49"],"/Users/riva/repos/todo/src/index.js",[],"/Users/riva/repos/todo/src/Components/TodoList.js",[],"/Users/riva/repos/todo/src/Components/TodoForm.js",["50","51"],"import React, { useState, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport '../Components/TodoForm.css'\nimport useForm from '../useFormHook';\nconst TodoForm = () => {\n\n    const { item, handleInputChange, handleSubmit } = useForm();\n\n  return ( \n    <Form className=\"TodoForm\" onSubmit={handleSubmit}>\n      <fieldset>\n        <Form.Group>\n          <div className=\"titleTodos\"> Add To Do Item</div>\n          <Form.Label>To Do Item</Form.Label>\n          <Form.Control name=\"text\" value={item.text} size=\"sm\" id=\"disabledTextInput\" placeholder=\"Item Details\" onChange={handleInputChange}/>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label htmlFor=\"disabledSelect\">Assigned To</Form.Label>\n          <Form.Control name=\"assignee\" value={item.assignee} size=\"sm\" as=\"select\" id=\"disabledSelect\" placeholder=\"Assignee Name\" onChange={handleInputChange}/>\n        </Form.Group>\n        <Form.Group controlId=\"formBasicRange\">\n          <Form.Label>Range</Form.Label>\n          <Form.Control name=\"range\" value={item.range} size=\"sm\" type=\"range\" onChange={handleInputChange} />\n        </Form.Group>\n        <Button type=\"submit\">Add Item</Button>\n      </fieldset>\n    </Form>\n  );\n}\n\nexport default TodoForm;","/Users/riva/repos/todo/src/Components/ToDoConnected.js",[],"/Users/riva/repos/todo/src/Components/Todo.js",[],"/Users/riva/repos/todo/src/useFormHook.js",["52"],"import React, { useState } from 'react';\n\nconst useForm = callback => {\n    const [item, setItem] = useState({ text: '', assignee: '', range: 0 });\n    const handleSubmit = e => {\n        if (e) {\n            e.preventDefault() \n            e.target.reset();\n        }\n        console.log('submitting item', item);\n        if (callback) {\n            callback();\n        }\n    };\n    const handleInputChange = e => {\n        e.persist();\n        setItem({ ...item, [e.target.name]: e.target.value });\n    };\n  return {\n    handleInputChange,\n    handleSubmit,\n    item,\n    }\n};\n\nexport default useForm;\n\n","/Users/riva/repos/todo/src/AxiosHook.js",["53"],"/Users/riva/repos/todo/src/Components/TodoConnected.js",["54"],{"ruleId":"55","severity":1,"message":"56","line":7,"column":11,"nodeType":"57","messageId":"58","endLine":7,"endColumn":16},{"ruleId":"55","severity":1,"message":"59","line":7,"column":18,"nodeType":"57","messageId":"58","endLine":7,"endColumn":28},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"55","severity":1,"message":"64","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":25},{"ruleId":"55","severity":1,"message":"65","line":1,"column":27,"nodeType":"57","messageId":"58","endLine":1,"endColumn":36},{"ruleId":"55","severity":1,"message":"66","line":1,"column":8,"nodeType":"57","messageId":"58","endLine":1,"endColumn":13},{"ruleId":"55","severity":1,"message":"64","line":2,"column":10,"nodeType":"57","messageId":"58","endLine":2,"endColumn":18},{"ruleId":"55","severity":1,"message":"67","line":2,"column":8,"nodeType":"57","messageId":"58","endLine":2,"endColumn":16},"no-unused-vars","'input' is assigned a value but never used.","Identifier","unusedVar","'countInput' is assigned a value but never used.","no-native-reassign",["68"],"no-negated-in-lhs",["69"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'React' is defined but never used.","'TodoForm' is defined but never used.","no-global-assign","no-unsafe-negation"]