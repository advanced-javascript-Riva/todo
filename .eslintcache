[{"/Users/riva/repos/todo/src/reportWebVitals.js":"1","/Users/riva/repos/todo/src/App.js":"2","/Users/riva/repos/todo/src/index.js":"3","/Users/riva/repos/todo/src/Components/TodoList.js":"4","/Users/riva/repos/todo/src/Components/TodoForm.js":"5"},{"size":362,"mtime":1606171492211,"results":"6","hashOfConfig":"7"},{"size":283,"mtime":1606176018467,"results":"8","hashOfConfig":"7"},{"size":336,"mtime":1606174416970,"results":"9","hashOfConfig":"7"},{"size":708,"mtime":1606175531685,"results":"10","hashOfConfig":"7"},{"size":1164,"mtime":1606175842115,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"czx635",{"filePath":"14","messages":"15","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/Users/riva/repos/todo/src/reportWebVitals.js",[],"/Users/riva/repos/todo/src/App.js",["24","25","26","27"],"/Users/riva/repos/todo/src/index.js",[],"/Users/riva/repos/todo/src/Components/TodoList.js",["28"],"import React from 'react';\nimport Card from '@bit/react-bootstrap.react-bootstrap.card';\nconst TodoList = () => {\n\n  render() {\n    return (\n      <Card style={{ width: '18rem' }}>\n      <Card.Header>Todo Items</Card.Header>\n      <ListGroup variant=\"success\">\n        <ListGroup.Item>Clean the Bedroom</ListGroup.Item>\n        <ListGroup.Item>Do the Laundry and fold it</ListGroup.Item>\n        </ListGroup>\n        <ListGroup variant=\"danger\">\n        <ListGroup.Item>Set aside time to play with cat</ListGroup.Item>\n      </ListGroup>\n      <ListGroup variant=\"success\">\n      <ListGroup.Item>Run to the grocery store</ListGroup.Item>\n      </ListGroup>\n    </Card>\n\n    );\n  }\n}\n\nexport default TodoList;","/Users/riva/repos/todo/src/Components/TodoForm.js",["29"],"import React from 'react';\nimport Form from 'react-bootstrap/Form';\n\nconst TodoForm = props => {\n\n  \n    this.state = { item: {}};\n\n  handleInputChange = e => {\n    this.setState({ item: {...this.state.item, [e.target.name]: e.target.value } });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    e.target.reset();\n    this.props.handleSubmit(this.state.item);\n    const item = {};\n    this.setState({item});\n  }\n  \n  render() {\n    return (\n  <Form>\n            <fieldset disabled>\n    <Form.Group>\n      <Form.Label htmlFor=\"disabledTextInput\">Item Details</Form.Label>\n      <Form.Control id=\"disabledTextInput\" placeholder=\"Disabled input\" />\n    </Form.Group>\n    <Form.Group>\n      <Form.Label htmlFor=\"disabledSelect\">Assignee Name</Form.Label>\n      <Form.Control as=\"select\" id=\"disabledSelect\">\n        <option>Disabled select</option>\n      </Form.Control>\n    </Form.Group>\n    <Form>\n    <Form.Group controlId=\"formBasicRange\">\n    <Form.Label>Range</Form.Label>\n    <Form.Control type=\"range\" />\n    </Form.Group>\n    </Form>\n       <Button type=\"submit\">Add Item</Button>\n         </fieldset>\n </Form>\n    );\n  }\n}\n\nexport default TodoForm;",{"ruleId":"30","severity":1,"message":"31","line":3,"column":8,"nodeType":"32","messageId":"33","endLine":3,"endColumn":16},{"ruleId":"30","severity":1,"message":"34","line":4,"column":8,"nodeType":"32","messageId":"33","endLine":4,"endColumn":16},{"ruleId":"30","severity":1,"message":"35","line":8,"column":11,"nodeType":"32","messageId":"33","endLine":8,"endColumn":16},{"ruleId":"30","severity":1,"message":"36","line":8,"column":18,"nodeType":"32","messageId":"33","endLine":8,"endColumn":26},{"ruleId":null,"fatal":true,"severity":2,"message":"37","line":5,"column":12},{"ruleId":null,"fatal":true,"severity":2,"message":"38","line":21,"column":12},"no-unused-vars","'TodoForm' is defined but never used.","Identifier","unusedVar","'TodoList' is defined but never used.","'input' is assigned a value but never used.","'setInput' is assigned a value but never used.","Parsing error: Unexpected token, expected \";\"\n\n  3 | const TodoList = () => {\n  4 | \n> 5 |   render() {\n    |            ^\n  6 |     return (\n  7 |       <Card style={{ width: '18rem' }}>\n  8 |       <Card.Header>Todo Items</Card.Header>","Parsing error: Unexpected token, expected \";\"\n\n  19 |   }\n  20 |   \n> 21 |   render() {\n     |            ^\n  22 |     return (\n  23 |   <Form>\n  24 |             <fieldset disabled>"]